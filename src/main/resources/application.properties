spring.application.name=optima-api-gateway
spring.config.import=configserver:http://localhost:8071

# Enables the gateway to create routes based on services registered with service discovery
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

logging.level.com.sadatmalik.optima.gateway=debug

# Will propagate the auth header (i.e. access token)
spring.cloud.gateway.routes[0].id=optima-organisation-service
spring.cloud.gateway.routes[0].uri=lb://optima-organisation-service
spring.cloud.gateway.routes[0].predicates=Path=/organisation/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/organisation/(?<path>.*), /$\{path}
spring.cloud.gateway.routes[0].filters[1]=RemoveRequestHeader=Cookie,Set-Cookie

spring.cloud.gateway.routes[1].id=optima-licensing-service
spring.cloud.gateway.routes[1].uri=lb://optima-licensing-service
spring.cloud.gateway.routes[1].predicates=Path=/license/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/license/(?<path>.*), /$\{path}
spring.cloud.gateway.routes[1].filters[1]=RemoveRequestHeader=Cookie,Set-Cookie

# To add the trace context to responses sent through the api gateway
spring.sleuth.reactor.instrumentation-type=DECORATE_ON_EACH